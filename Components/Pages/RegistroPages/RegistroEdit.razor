@page "/Registro/Edit/{AporteId:int}"
@inject RegistroServices registroServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Aporte</PageTitle>

<EditForm Model="Aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white">
                <h5 class="card-title"><strong>Editar Aporte</strong></h5>
            </div>

            <div class="card-body">

                <div class="mb-3">
                    <label class="form-label"><strong>Aporte ID</strong></label>
                    <InputNumber class="form-control" @bind-Value="Aporte.AporteId" readonly />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Aporte.Name" />
                    <ValidationMessage For="(() => Aporte.Name)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Aporte.Mount" />
                    <ValidationMessage For="(() => Aporte.Mount)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Aporte.Fecha" />
                    <ValidationMessage For="(() => Aporte.Fecha)" />
                </div>

                <div class="card-footer text-center mt-2">
                    <div class="btn-group" role="group">
                        <a href="/Registro/Delete/@AporteId" class="btn btn-outline-primary bi bi-trash"> Eliminar</a>
                        <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                        <a href="/Registro" class="btn btn-outline-secondary">
                            <span class="bi bi-arrow-left"></span> Volver
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int AporteId { get; set; }

    private Registro Aporte { get; set; } = new Registro();

    protected override async Task OnInitializedAsync()
    {
        var aporteBuscado = await registroServices.Buscar(AporteId);
        if (aporteBuscado != null)
        {
            Aporte = aporteBuscado;
        }
        else
        {
            Aporte = new Registro { Fecha = DateTime.Now };
        }
    }

    private async Task Guardar()
    {
        if (string.IsNullOrWhiteSpace(Aporte.Name))
        {
            return;
        }

        Aporte.Fecha = DateTime.SpecifyKind(Aporte.Fecha, DateTimeKind.Utc);

        await registroServices.Guardar(Aporte);
        navigationManager.NavigateTo("/Registro");
    }
}
